This is a simplified example.  Remember to add implementations for Dijkstra's algorithm, Topological Sort, Cycle detection,  comprehensive test cases in `test_cases.cpp`, and a more detailed `algorithms.md` file.  Consider using a more robust testing framework (like Google Test) for a professional-level project.  Remember to expand this to meet the 1000+ line requirement by adding more sophisticated graph algorithms (e.g., Minimum Spanning Tree algorithms, Maximum Flow algorithms) and more comprehensive testing.  Also, exploring different data structures for the graph representation (adjacency matrix) and alternative programming paradigms (e.g., using classes more extensively) will increase the code size and demonstrate a deeper understanding.